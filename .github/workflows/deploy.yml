name: Deploy app

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  deployment:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Build
        run: npm run build
      - name: Test frontend
        run: npm run test:frontend
      - name: Test backend
        run: npm run test:backend
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Test e2e
        run: npm run test:e2e
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
      - name: Deploy
        if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message), '#skip') }}
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      - name: Discord notify (success)
        uses: rjstone/discord-webhook-notify@v1.0.0
        if: success()
        with:
          text: New version deployed
          severity: info
          description: Deployment success!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      - name: Discord notify (failure)
        uses: rjstone/discord-webhook-notify@v1.0.0
        if: failure()
        with:
          text: Build failed 
          severity: error
          username: jburn/GitHub
          description: Build failed,,,
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
  tag_release:
    needs: [deployment]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Tag version
        if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message), '#skip') }}
        uses: anothrNick/github-tag-action@1.71.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}